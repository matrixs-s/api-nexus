"use strict";var o=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var u=Object.prototype.hasOwnProperty;var b=(t,e)=>{for(var r in e)o(t,r,{get:e[r],enumerable:!0})},f=(t,e,r,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of h(e))!u.call(t,s)&&s!==r&&o(t,s,{get:()=>e[s],enumerable:!(i=l(e,s))||i.enumerable});return t};var g=t=>f(o({},"__esModule",{value:!0}),t);var d={};b(d,{WordModule:()=>c});module.exports=g(d);var a=require("../../errors/faker-error"),m=require("../../internal/bind-this-to-member-functions"),n=require("./filterWordListByLength");class c{constructor(e){this.faker=e;(0,m.bindThisToMemberFunctions)(this)}adjective(e={}){const r=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement((0,n.filterWordListByLength)({...r,wordList:this.faker.definitions.word.adjective}))}adverb(e={}){const r=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement((0,n.filterWordListByLength)({...r,wordList:this.faker.definitions.word.adverb}))}conjunction(e={}){const r=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement((0,n.filterWordListByLength)({...r,wordList:this.faker.definitions.word.conjunction}))}interjection(e={}){const r=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement((0,n.filterWordListByLength)({...r,wordList:this.faker.definitions.word.interjection}))}noun(e={}){const r=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement((0,n.filterWordListByLength)({...r,wordList:this.faker.definitions.word.noun}))}preposition(e={}){const r=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement((0,n.filterWordListByLength)({...r,wordList:this.faker.definitions.word.preposition}))}verb(e={}){const r=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement((0,n.filterWordListByLength)({...r,wordList:this.faker.definitions.word.verb}))}sample(e={}){const r=this.faker.helpers.shuffle([this.adjective,this.adverb,this.conjunction,this.interjection,this.noun,this.preposition,this.verb]);for(const i of r)try{return i(e)}catch{continue}throw new a.FakerError("No matching word data available for the current locale")}words(e={}){typeof e=="number"&&(e={count:e});const{count:r={min:1,max:3}}=e;return this.faker.helpers.multiple(()=>this.sample(),{count:r}).join(" ")}}0&&(module.exports={WordModule});
